f	IDENT
=	ASSIGN_OP
15	INT_LIT
;	SEMICOLON
i	IDENT
=	ASSIGN_OP
11	INT_LIT
;	SEMICOLON
input	KEY_IN
(	OPEN_PAREN
n	IDENT
)	CLOSE_PAREN
;	SEMICOLON
if	KEY_IF
(	OPEN_PAREN
n	IDENT
==	EQUAL_OP
i	IDENT
&&	BOOL_AND
f	IDENT
>	GREATER_OP
i	IDENT
)	CLOSE_PAREN
{	OPEN_CURL
i	IDENT
=	ASSIGN_OP
i	IDENT
+	ADD_OP
f	IDENT
;	SEMICOLON
}	CLOSE_CURL
else	KEY_ELSE
{	OPEN_CURL
i	IDENT
=	ASSIGN_OP
f	IDENT
-	SUB_OP
i	IDENT
;	SEMICOLON
}	CLOSE_CURL
t	IDENT
=	ASSIGN_OP
x	IDENT
;	SEMICOLON
if	KEY_IF
(	OPEN_PAREN
t	IDENT
<	LESSER_OP
n	IDENT
||	BOOL_OR
i	IDENT
<	LESSER_OP
f	IDENT
)	CLOSE_PAREN
{	OPEN_CURL
input	KEY_IN
(	OPEN_PAREN
a	IDENT
)	CLOSE_PAREN
;	SEMICOLON
t	IDENT
=	ASSIGN_OP
a	IDENT
+	ADD_OP
f	IDENT
-	SUB_OP
f	IDENT
*	MULT_OP
x	IDENT
;	SEMICOLON
output	KEY_OUT
(	OPEN_PAREN
n	IDENT
)	CLOSE_PAREN
;	SEMICOLON
}	CLOSE_CURL
else	KEY_ELSE
{	OPEN_CURL
read	IDENT
(	OPEN_PAREN
a	IDENT
)	CLOSE_PAREN
;	SEMICOLON
t	IDENT
=	ASSIGN_OP
a	IDENT
+	ADD_OP
f	IDENT
-	SUB_OP
(	OPEN_PAREN
f	IDENT
%	MOD_OP
x	IDENT
)	CLOSE_PAREN
;	SEMICOLON
output	KEY_OUT
(	OPEN_PAREN
n	IDENT
)	CLOSE_PAREN
;	SEMICOLON
}	CLOSE_CURL
output	KEY_OUT
(	OPEN_PAREN
t	IDENT
)	CLOSE_PAREN
;	SEMICOLON
